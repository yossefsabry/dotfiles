return {
-- 	"mfussenegger/nvim-dap",
--  Cmd = "Dap",
-- 	dependencies = {
--     "nvim-neotest/nvim-nio",
-- 		"leoluz/nvim-dap-go",
-- 		"rcarriga/nvim-dap-ui",
--     "tpope/vim-fugitive",
--     "folke/trouble.nvim",
-- 	},
--   config = function()
--     local dap = require("dap")
--     local dapui = require("dapui")
--     require("dapui").setup()
--
--
--     -- ========== c c++ ========== 
--     dap.adapters.gdb = {
--     id = 'gdb',
--     type = 'executable',
--     command = 'gdb',
--     args = { '--quiet', '--interpreter=dap' },
-- }
--
--     dap.configurations.c = {
--       {
--         name = 'Run executable (GDB)',
--         type = 'gdb',
--         request = 'launch',
--         -- This requires special handling of 'run_last', see
--         -- https://github.com/mfussenegger/nvim-dap/issues/1025#issuecomment-1695852355
--         program = function()
--           local path = vim.fn.input({
--             prompt = 'Path to executable: ',
--             default = vim.fn.getcwd() .. '/',
--             completion = 'file',
--           })
--
--             return (path and path ~= '') and path or dap.ABORT
--         end,
--     },
--     {
--         name = 'Run executable with arguments (GDB)',
--         type = 'gdb',
--         request = 'launch',
--         -- This requires special handling of 'run_last', see
--         -- https://github.com/mfussenegger/nvim-dap/issues/1025#issuecomment-1695852355
--         program = function()
--             local path = vim.fn.input({
--                 prompt = 'Path to executable: ',
--                 default = vim.fn.getcwd() .. '/',
--                 completion = 'file',
--             })
--
--           return (path and path ~= '') and path or dap.ABORT
--         end,
--         args = function()
--           local args_str = vim.fn.input({
--             prompt = 'Arguments: ',
--           })
--           return vim.split(args_str, ' +')
--         end,
--       },
--       {
--         name = 'Attach to process (GDB)',
--         type = 'gdb',
--         request = 'attach',
--         processId = require('dap.utils').pick_process,
--       },
--     }
--     -- //========== c c++ ==========// 
--
--
--     -- ============= go =================== --
--     require('dap-go').setup {
--       dap_configurations = {
--         {
--           type = "go",
--           name = "Attach remote",
--           mode = "remote",
--           request = "attach",
--         },
--       },
--       delve = {
--         path = "dlv",
--         initialize_timeout_sec = 20,
--         port = "${port}",
--         args = {},
--         build_flags = "",
--         detached = vim.fn.has("win32") == 0,
--         cwd = nil,
--       },
--     }
--     -- //============= go ===================// --
--
--     dap.listeners.before.attach.dapui_config = function()
--       dapui.open()
--     end
--     dap.listeners.before.launch.dapui_config = function()
--       dapui.open()
--     end
--     dap.listeners.before.event_terminated.dapui_config = function()
--       dapui.close()
--     end
--     dap.listeners.before.event_exited.dapui_config = function()
--       dapui.close()
--     end
--
--     vim.keymap.set("n", "<Leader>dt", dap.toggle_breakpoint, {})
--     vim.keymap.set("n", "<Leader>dc", dap.continue, {})
--   end,
}
